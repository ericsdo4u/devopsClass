#name: Deploy Dockerhub
#
#on:
#  push:
#    branches:
#      - dev
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Restore Maven cache
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build Docker image
#        run: docker build -t ericsdo4u/devops-class:latest .
#
#      - name: Push Docker image to Docker Hub
#        run: docker push ericsdo4u/devops-class:latest
#
#      - name: Deploy to AWS EC2
#        env:
#          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
#          AWS_HOST: ${{ secrets.AWS_HOST }}
#        run: |
#          echo "${{ secrets.AWS_PRIVATE_KEY }}" > private_key.pem
#          chmod 600 private_key.pem
#          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
#            sudo chmod 666 /var/run/docker.sock
#            docker pull ericsdo4u/:latest
#            docker stop devops-class || true
#            docker rm devops-class || true
#            docker run -d --devops-classname my-web-app -p 8080:8080 ericsdo4u/devops-class:latest
#         EOF
name: Deploy Dockerhub

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ericsdo4u/devops-class:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ericsdo4u/devops-class:latest

      - name: Deploy to AWS EC2
        env:
          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          AWS_HOST: ${{ secrets.AWS_HOST }}
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
            # Ensure Docker socket permissions are set
            sudo chmod 666 /var/run/docker.sock
          
            # Pull the latest Docker image
            docker pull ericsdo4u/devops-class:latest
          
            # Stop and remove any existing container
            docker stop devops-class || true
            docker rm devops-class || true
          
            # Run the new container
            docker run -d --name devops-class -p 8080:8080 ericsdo4u/devops-class:latest
          EOF
